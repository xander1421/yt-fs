{"version":3,"file":"content.js","sources":["../src/content.ts"],"sourcesContent":["/**\n * YouTube Tab-Fullscreen Extension - Content Script\n */\n\n// Constants\nconst STORAGE_KEY = 'ytTabFS';\nconst CSS_CLASS = 'yt-tabfs-enabled';\nconst BUTTON_ID = 'yt-tabfs-button';\n\n/**\n * StateManager - Handles per-tab memory using sessionStorage\n */\nnamespace StateManager {\n  export function load(): boolean {\n    try {\n      return sessionStorage.getItem(STORAGE_KEY) === '1';\n    } catch {\n      return false;\n    }\n  }\n\n  export function save(isEnabled: boolean): void {\n    try {\n      if (isEnabled) {\n        sessionStorage.setItem(STORAGE_KEY, '1');\n      } else {\n        sessionStorage.removeItem(STORAGE_KEY);\n      }\n    } catch {\n      // Ignore storage errors\n    }\n  }\n\n  export function getState(): boolean {\n    return load();\n  }\n\n  export function setState(isEnabled: boolean): void {\n    save(isEnabled);\n  }\n}\n\n/**\n * DOMOverlay - Manages the tab-fullscreen CSS class\n */\nnamespace DOMOverlay {\n  export function enable(): void {\n    document.documentElement.classList.add(CSS_CLASS);\n  }\n\n  export function disable(): void {\n    document.documentElement.classList.remove(CSS_CLASS);\n  }\n\n  export function isEnabled(): boolean {\n    return document.documentElement.classList.contains(CSS_CLASS);\n  }\n}\n\n/**\n * ToggleButton - Creates and manages the tab-fullscreen button\n */\nnamespace ToggleButton {\n  let button: HTMLElement | null = null;\n\n  export function cleanup(): void {\n    // Remove any existing buttons from DOM\n    const existingButtons = document.querySelectorAll(`#${BUTTON_ID}`);\n    existingButtons.forEach(btn => btn.remove());\n    button = null;\n  }\n\n  export function create(): HTMLElement {\n    // Always cleanup before creating new button\n    cleanup();\n    \n    const btn = document.createElement('button');\n    btn.id = BUTTON_ID;\n    btn.className = 'ytp-button';\n    btn.setAttribute('aria-label', 'Tab Fullscreen');\n    btn.setAttribute('title', 'Tab Fullscreen (Alt+T)');\n    btn.setAttribute('data-tooltip-opaque', 'false');\n    \n    // Create SVG icon that clearly shows tab-fullscreen concept\n    btn.innerHTML = `\n      <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" style=\"pointer-events: none; width: 24px; height: 24px;\">\n        <!-- Tab bar (browser chrome) -->\n        <rect x=\"6\" y=\"2.5\" width=\"12\" height=\"2\" rx=\"1\" ry=\"1\" fill=\"currentColor\" stroke=\"none\"/>\n        <!-- Video frame -->\n        <rect x=\"3\" y=\"5\" width=\"18\" height=\"16\" rx=\"2\" ry=\"2\"/>\n        <!-- Up arrow -->\n        <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"6.2\"/>\n        <polyline points=\"10.7,7.5 12,6 13.3,7.5\"/>\n        <!-- Down arrow -->\n        <line x1=\"12\" y1=\"14.8\" x2=\"12\" y2=\"17.6\"/>\n        <polyline points=\"10.7,16.3 12,17.8 13.3,16.3\"/>\n        <!-- Left arrow -->\n        <line x1=\"7.2\" y1=\"12\" x2=\"4.4\" y2=\"12\"/>\n        <polyline points=\"5.9,10.7 4.4,12 5.9,13.3\"/>\n        <!-- Right arrow -->\n        <line x1=\"16.8\" y1=\"12\" x2=\"19.6\" y2=\"12\"/>\n        <polyline points=\"18.1,10.7 19.6,12 18.1,13.3\"/>\n      </svg>\n    `;\n\n    btn.addEventListener('click', handleClick);\n    button = btn;\n    return btn;\n  }\n\n  function handleClick(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    const currentState = StateManager.getState();\n    const newState = !currentState;\n    \n    if (newState) {\n      DOMOverlay.enable();\n    } else {\n      DOMOverlay.disable();\n    }\n    \n    StateManager.setState(newState);\n    updateButtonState(newState);\n  }\n\n  export function updateButtonState(isEnabled: boolean): void {\n    if (button) {\n      if (isEnabled) {\n        button.classList.add('active');\n        button.setAttribute('aria-pressed', 'true');\n      } else {\n        button.classList.remove('active');\n        button.setAttribute('aria-pressed', 'false');\n      }\n    }\n  }\n\n  export function getButton(): HTMLElement | null {\n    return button;\n  }\n}\n\n/**\n * UIInjector - Handles injecting the button into YouTube's controls\n */\nnamespace UIInjector {\n  let injected = false;\n\n  export function inject(): boolean {\n    console.log('[YT-TabFS] inject() called');\n    \n    // Check if button actually exists in DOM\n    const existingButton = document.getElementById(BUTTON_ID);\n    if (injected && existingButton) {\n      console.log('[YT-TabFS] Button already exists, skipping');\n      return true;\n    }\n\n    // If our flag says injected but button doesn't exist, reset the flag\n    if (injected && !existingButton) {\n      console.log('[YT-TabFS] Injected flag true but button missing, resetting');\n      injected = false;\n    }\n\n    // Try to find controls - first try right (for Chrome), then left (for Firefox fallback)\n    let controlsContainer = document.querySelector('.ytp-chrome-controls .ytp-right-controls');\n    let useLeftControls = false;\n    \n    console.log('[YT-TabFS] Right controls found:', !!controlsContainer);\n    \n    if (!controlsContainer) {\n      // Fallback to left controls if right controls not found\n      controlsContainer = document.querySelector('.ytp-chrome-controls .ytp-left-controls');\n      useLeftControls = true;\n      console.log('[YT-TabFS] Falling back to left controls, found:', !!controlsContainer);\n    }\n    \n    if (!controlsContainer) {\n      console.log('[YT-TabFS] No controls container found, aborting');\n      return false;\n    }\n    \n    // Clean up any existing buttons before creating new one\n    ToggleButton.cleanup();\n\n    const button = ToggleButton.create();\n    const initialState = StateManager.getState();\n    ToggleButton.updateButtonState(initialState);\n    \n    if (useLeftControls) {\n      console.log('[YT-TabFS] Using LEFT controls strategy');\n      // Using left controls (Firefox or fallback): Insert after volume and time display\n      const volumePanel = controlsContainer.querySelector('.ytp-volume-panel');\n      const timeDisplay = controlsContainer.querySelector('.ytp-time-display');\n      \n      console.log('[YT-TabFS] Found volume panel:', !!volumePanel, 'time display:', !!timeDisplay);\n      \n      if (timeDisplay && timeDisplay.nextSibling) {\n        controlsContainer.insertBefore(button, timeDisplay.nextSibling);\n        console.log('[YT-TabFS] Inserted after time display');\n      } else if (volumePanel && volumePanel.nextSibling) {\n        controlsContainer.insertBefore(button, volumePanel.nextSibling);\n        console.log('[YT-TabFS] Inserted after volume panel');\n      } else {\n        controlsContainer.appendChild(button);\n        console.log('[YT-TabFS] Appended to end of left controls');\n      }\n    } else {\n      console.log('[YT-TabFS] Using RIGHT controls strategy');\n      // Using right controls (Chrome): Insert before settings button\n      const settingsButton = controlsContainer.querySelector('.ytp-settings-button');\n      const theaterButton = controlsContainer.querySelector('.ytp-size-button');\n      const miniplayerButton = controlsContainer.querySelector('.ytp-miniplayer-button');\n      \n      console.log('[YT-TabFS] Found theater:', !!theaterButton, 'miniplayer:', !!miniplayerButton, 'settings:', !!settingsButton);\n      \n      if (theaterButton) {\n        controlsContainer.insertBefore(button, theaterButton);\n        console.log('[YT-TabFS] Inserted before theater button');\n      } else if (miniplayerButton) {\n        controlsContainer.insertBefore(button, miniplayerButton);\n        console.log('[YT-TabFS] Inserted before miniplayer button');\n      } else if (settingsButton) {\n        controlsContainer.insertBefore(button, settingsButton);\n        console.log('[YT-TabFS] Inserted before settings button');\n      } else {\n        // Insert at the beginning if no known buttons found\n        if (controlsContainer.firstChild) {\n          controlsContainer.insertBefore(button, controlsContainer.firstChild);\n          console.log('[YT-TabFS] Inserted at beginning of right controls');\n        } else {\n          controlsContainer.appendChild(button);\n          console.log('[YT-TabFS] Appended to end of right controls');\n        }\n      }\n    }\n    \n    console.log('[YT-TabFS] Button injection successful');\n    injected = true;\n    return true;\n  }\n\n  export function reset(): void {\n    ToggleButton.cleanup();\n    injected = false;\n  }\n}\n\n/**\n * ObserverGuard - Manages DOM observation for SPA navigation\n */\nnamespace ObserverGuard {\n  let observer: MutationObserver | null = null;\n  let controlsObserver: MutationObserver | null = null;\n  let currentPath: string = '';\n  let currentUrl: string = '';\n  let debounceTimer: number | null = null;\n\n  function debounceNavigationHandler(callback: () => void, delay: number = 200): void {\n    if (debounceTimer) {\n      clearTimeout(debounceTimer);\n    }\n    debounceTimer = window.setTimeout(callback, delay);\n  }\n\n  function observePlayerControls(): void {\n    // Stop any existing controls observer\n    if (controlsObserver) {\n      controlsObserver.disconnect();\n    }\n\n    // Watch specifically for changes in the player controls area\n    const player = document.querySelector('#movie_player');\n    if (!player) return;\n\n    controlsObserver = new MutationObserver((mutations) => {\n      // Check if our button was removed\n      const existingButton = document.getElementById(BUTTON_ID);\n      if (!existingButton && window.location.pathname.includes('/watch')) {\n        // Check if either controls container exists\n        const controls = document.querySelector('.ytp-chrome-controls .ytp-right-controls') ||\n                        document.querySelector('.ytp-chrome-controls .ytp-left-controls');\n          \n        if (controls) {\n          debounceNavigationHandler(() => {\n            UIInjector.reset();\n            UIInjector.inject();\n          }, 100);\n        }\n      }\n    });\n\n    controlsObserver.observe(player, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['class']\n    });\n  }\n\n  export function start(): void {\n    if (observer) return;\n\n    // Track initial path and full URL\n    currentPath = window.location.pathname;\n    currentUrl = window.location.href;\n\n    observer = new MutationObserver(() => {\n      const newPath = window.location.pathname;\n      const newUrl = window.location.href;\n      \n      // Check if navigation occurred (either path change or URL change)\n      if (newPath !== currentPath || newUrl !== currentUrl) {\n        currentPath = newPath;\n        currentUrl = newUrl;\n        \n        if (newPath.includes('/watch')) {\n          // User navigated to a video page (or between videos)\n          debounceNavigationHandler(() => {\n            UIInjector.reset();\n            initOnce();\n            // Start observing player controls\n            setTimeout(() => observePlayerControls(), 500);\n          }, 150);\n        } else {\n          // User navigated away from video page\n          if (StateManager.getState()) {\n            DOMOverlay.disable();\n            StateManager.setState(false);\n            const button = ToggleButton.getButton();\n            if (button) {\n              ToggleButton.updateButtonState(false);\n            }\n          }\n          UIInjector.reset();\n          if (controlsObserver) {\n            controlsObserver.disconnect();\n            controlsObserver = null;\n          }\n        }\n      } else if (newPath.includes('/watch')) {\n        // Still on video page, check if button still exists\n        const existingButton = document.getElementById(BUTTON_ID);\n        if (!existingButton) {\n          debounceNavigationHandler(() => {\n            UIInjector.reset();\n            initOnce();\n          }, 150);\n        }\n      }\n    });\n\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n\n    // Start observing controls if we're already on a video page\n    if (currentPath.includes('/watch')) {\n      setTimeout(() => observePlayerControls(), 500);\n    }\n  }\n\n  export function stop(): void {\n    if (observer) {\n      observer.disconnect();\n      observer = null;\n    }\n    if (controlsObserver) {\n      controlsObserver.disconnect();\n      controlsObserver = null;\n    }\n  }\n}\n\n/**\n * EventBridge - Handles keyboard shortcuts\n */\nnamespace EventBridge {\n  function handleToggle(): void {\n    // Check if we're on a video page\n    if (!window.location.pathname.includes('/watch')) {\n      return;\n    }\n    \n    const button = ToggleButton.getButton();\n    if (button) {\n      button.click();\n    } else {\n      // Try to inject the button first\n      if (UIInjector.inject()) {\n        const newButton = ToggleButton.getButton();\n        if (newButton) {\n          newButton.click();\n        }\n      }\n    }\n  }\n\n  export function init(): void {\n    // Use browser API if available (Firefox), otherwise use chrome API\n    const browserAPI = (typeof browser !== 'undefined' && browser) ? browser : chrome;\n    \n    // Listen for messages from background script\n    browserAPI.runtime.onMessage.addListener((message: any, sender: any, sendResponse: any) => {\n      if (message.action === 'toggle-tabfs') {\n        handleToggle();\n        sendResponse({ success: true });\n      }\n      return true;\n    });\n\n    // Fallback: Direct keyboard listener as backup\n    document.addEventListener('keydown', (event: KeyboardEvent) => {\n      // Check for Alt+T\n      if (event.altKey && event.key.toLowerCase() === 't') {\n        event.preventDefault();\n        event.stopPropagation();\n        handleToggle();\n      }\n    }, true);\n  }\n}\n\n/**\n * VideoPlayerWaiter - Waits for YouTube video player to be ready\n */\nnamespace VideoPlayerWaiter {\n  export function waitForPlayer(): Promise<boolean> {\n    return new Promise((resolve) => {\n      let attempts = 0;\n      const maxAttempts = 100; // 10 seconds max wait\n      const interval = 100; // Check every 100ms\n\n      const checkPlayer = () => {\n        // Check for either right or left controls\n        const controlsContainer = document.querySelector('.ytp-chrome-controls .ytp-right-controls') ||\n                                 document.querySelector('.ytp-chrome-controls .ytp-left-controls');\n        const player = document.querySelector('#movie_player');\n        \n        if (controlsContainer && player) {\n          resolve(true);\n          return;\n        }\n        \n        attempts++;\n        if (attempts >= maxAttempts) {\n          resolve(false);\n          return;\n        }\n        \n        setTimeout(checkPlayer, interval);\n      };\n      \n      checkPlayer();\n    });\n  }\n}\n\n/**\n * Main initialization function\n */\nasync function initOnce(): Promise<void> {\n  // Only inject on video pages\n  if (!window.location.pathname.includes('/watch')) {\n    return;\n  }\n  \n  // Wait for YouTube player to be ready\n  const playerReady = await VideoPlayerWaiter.waitForPlayer();\n  \n  if (!playerReady) {\n    // Retry after a delay\n    setTimeout(() => initOnce(), 1000);\n    return;\n  }\n  \n  if (UIInjector.inject()) {\n    // Restore state if tab-fullscreen was previously enabled\n    const savedState = StateManager.getState();\n    if (savedState) {\n      DOMOverlay.enable();\n      ToggleButton.updateButtonState(true);\n    }\n  }\n}\n\n/**\n * Cleanup function to ensure proper state on page load\n */\nfunction ensureCleanState(): void {\n  // If we're not on a video page but tab-fullscreen is enabled, disable it\n  if (!window.location.pathname.includes('/watch') && DOMOverlay.isEnabled()) {\n    DOMOverlay.disable();\n    StateManager.setState(false);\n  }\n}\n\n/**\n * InitialLoadHandler - Handles proper initialization on first page load\n */\nnamespace InitialLoadHandler {\n  let retryCount = 0;\n  const maxRetries = 10;\n  \n  export function handleInitialLoad(): void {\n    if (!window.location.pathname.includes('/watch')) {\n      return;\n    }\n    \n    initOnce()\n      .then(() => {\n        retryCount = 0; // Reset retry count on success\n      })\n      .catch((err) => {\n        // Retry with exponential backoff\n        if (retryCount < maxRetries) {\n          retryCount++;\n          const delay = Math.min(1000 * Math.pow(2, retryCount - 1), 5000); // Max 5 seconds\n          setTimeout(() => handleInitialLoad(), delay);\n        }\n      });\n  }\n}\n\n/**\n * Entry point\n */\nfunction init(): void {\n  // Clean up any stale state first\n  ensureCleanState();\n  \n  // Handle initial load with retry mechanism\n  InitialLoadHandler.handleInitialLoad();\n  \n  ObserverGuard.start();\n  EventBridge.init();\n}\n\n// Start the extension\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', init);\n} else {\n  init();\n}\n\n "],"names":[],"mappings":";;;IAKA,MAAM,WAAW,GAAG,SAAS;IAC7B,MAAM,SAAS,GAAG,kBAAkB;IACpC,MAAM,SAAS,GAAG,iBAAiB;IAKnC,IAAU,YAAY;IAAtB,CAAA,UAAU,YAAY,EAAA;IACpB,IAAA,SAAgB,IAAI,GAAA;IAClB,QAAA,IAAI;gBACF,OAAO,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,GAAG;;IAClD,QAAA,MAAM;IACN,YAAA,OAAO,KAAK;;;IAJA,IAAA,YAAA,CAAA,IAAI,OAMnB;QAED,SAAgB,IAAI,CAAC,SAAkB,EAAA;IACrC,QAAA,IAAI;gBACF,IAAI,SAAS,EAAE;IACb,gBAAA,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC;;qBACnC;IACL,gBAAA,cAAc,CAAC,UAAU,CAAC,WAAW,CAAC;;;IAExC,QAAA,MAAM;;;IAPM,IAAA,YAAA,CAAA,IAAI,OAUnB;IAED,IAAA,SAAgB,QAAQ,GAAA;YACtB,OAAO,IAAI,EAAE;;IADC,IAAA,YAAA,CAAA,QAAQ,WAEvB;QAED,SAAgB,QAAQ,CAAC,SAAkB,EAAA;YACzC,IAAI,CAAC,SAAS,CAAC;;IADD,IAAA,YAAA,CAAA,QAAQ,WAEvB;IACH,CAAC,EA5BS,YAAY,KAAZ,YAAY,GA4BrB,EAAA,CAAA,CAAA;IAKD,IAAU,UAAU;IAApB,CAAA,UAAU,UAAU,EAAA;IAClB,IAAA,SAAgB,MAAM,GAAA;YACpB,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC;;IADnC,IAAA,UAAA,CAAA,MAAM,SAErB;IAED,IAAA,SAAgB,OAAO,GAAA;YACrB,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;;IADtC,IAAA,UAAA,CAAA,OAAO,UAEtB;IAED,IAAA,SAAgB,SAAS,GAAA;YACvB,OAAO,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC;;IAD/C,IAAA,UAAA,CAAA,SAAS,YAExB;IACH,CAAC,EAZS,UAAU,KAAV,UAAU,GAYnB,EAAA,CAAA,CAAA;IAKD,IAAU,YAAY;IAAtB,CAAA,UAAU,YAAY,EAAA;QACpB,IAAI,MAAM,GAAuB,IAAI;IAErC,IAAA,SAAgB,OAAO,GAAA;YAErB,MAAM,eAAe,GAAG,QAAQ,CAAC,gBAAgB,CAAC,CAAI,CAAA,EAAA,SAAS,CAAE,CAAA,CAAC;IAClE,QAAA,eAAe,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,CAAC;YAC5C,MAAM,GAAG,IAAI;;IAJC,IAAA,YAAA,CAAA,OAAO,UAKtB;IAED,IAAA,SAAgB,MAAM,GAAA;IAEpB,QAAA,OAAO,EAAE;YAET,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;IAC5C,QAAA,GAAG,CAAC,EAAE,GAAG,SAAS;IAClB,QAAA,GAAG,CAAC,SAAS,GAAG,YAAY;IAC5B,QAAA,GAAG,CAAC,YAAY,CAAC,YAAY,EAAE,gBAAgB,CAAC;IAChD,QAAA,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,wBAAwB,CAAC;IACnD,QAAA,GAAG,CAAC,YAAY,CAAC,qBAAqB,EAAE,OAAO,CAAC;YAGhD,GAAG,CAAC,SAAS,GAAG;;;;;;;;;;;;;;;;;;;KAmBf;IAED,QAAA,GAAG,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC;YAC1C,MAAM,GAAG,GAAG;IACZ,QAAA,OAAO,GAAG;;IAnCI,IAAA,YAAA,CAAA,MAAM,SAoCrB;QAED,SAAS,WAAW,CAAC,KAAY,EAAA;YAC/B,KAAK,CAAC,cAAc,EAAE;YACtB,KAAK,CAAC,eAAe,EAAE;IAEvB,QAAA,MAAM,YAAY,GAAG,YAAY,CAAC,QAAQ,EAAE;IAC5C,QAAA,MAAM,QAAQ,GAAG,CAAC,YAAY;YAE9B,IAAI,QAAQ,EAAE;gBACZ,UAAU,CAAC,MAAM,EAAE;;iBACd;gBACL,UAAU,CAAC,OAAO,EAAE;;IAGtB,QAAA,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAC/B,iBAAiB,CAAC,QAAQ,CAAC;;QAG7B,SAAgB,iBAAiB,CAAC,SAAkB,EAAA;YAClD,IAAI,MAAM,EAAE;gBACV,IAAI,SAAS,EAAE;IACb,gBAAA,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC;IAC9B,gBAAA,MAAM,CAAC,YAAY,CAAC,cAAc,EAAE,MAAM,CAAC;;qBACtC;IACL,gBAAA,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC;IACjC,gBAAA,MAAM,CAAC,YAAY,CAAC,cAAc,EAAE,OAAO,CAAC;;;;IAPlC,IAAA,YAAA,CAAA,iBAAiB,oBAUhC;IAED,IAAA,SAAgB,SAAS,GAAA;IACvB,QAAA,OAAO,MAAM;;IADC,IAAA,YAAA,CAAA,SAAS,YAExB;IACH,CAAC,EAhFS,YAAY,KAAZ,YAAY,GAgFrB,EAAA,CAAA,CAAA;IAKD,IAAU,UAAU;IAApB,CAAA,UAAU,UAAU,EAAA;QAClB,IAAI,QAAQ,GAAG,KAAK;IAEpB,IAAA,SAAgB,MAAM,GAAA;IACpB,QAAA,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC;YAGzC,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC;IACzD,QAAA,IAAI,QAAQ,IAAI,cAAc,EAAE;IAC9B,YAAA,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC;IACzD,YAAA,OAAO,IAAI;;IAIb,QAAA,IAAI,QAAQ,IAAI,CAAC,cAAc,EAAE;IAC/B,YAAA,OAAO,CAAC,GAAG,CAAC,6DAA6D,CAAC;gBAC1E,QAAQ,GAAG,KAAK;;YAIlB,IAAI,iBAAiB,GAAG,QAAQ,CAAC,aAAa,CAAC,0CAA0C,CAAC;YAC1F,IAAI,eAAe,GAAG,KAAK;YAE3B,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,CAAC,CAAC,iBAAiB,CAAC;YAEpE,IAAI,CAAC,iBAAiB,EAAE;IAEtB,YAAA,iBAAiB,GAAG,QAAQ,CAAC,aAAa,CAAC,yCAAyC,CAAC;gBACrF,eAAe,GAAG,IAAI;gBACtB,OAAO,CAAC,GAAG,CAAC,kDAAkD,EAAE,CAAC,CAAC,iBAAiB,CAAC;;YAGtF,IAAI,CAAC,iBAAiB,EAAE;IACtB,YAAA,OAAO,CAAC,GAAG,CAAC,kDAAkD,CAAC;IAC/D,YAAA,OAAO,KAAK;;YAId,YAAY,CAAC,OAAO,EAAE;IAEtB,QAAA,MAAM,MAAM,GAAG,YAAY,CAAC,MAAM,EAAE;IACpC,QAAA,MAAM,YAAY,GAAG,YAAY,CAAC,QAAQ,EAAE;IAC5C,QAAA,YAAY,CAAC,iBAAiB,CAAC,YAAY,CAAC;YAE5C,IAAI,eAAe,EAAE;IACnB,YAAA,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC;gBAEtD,MAAM,WAAW,GAAG,iBAAiB,CAAC,aAAa,CAAC,mBAAmB,CAAC;gBACxE,MAAM,WAAW,GAAG,iBAAiB,CAAC,aAAa,CAAC,mBAAmB,CAAC;IAExE,YAAA,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,CAAC,CAAC,WAAW,EAAE,eAAe,EAAE,CAAC,CAAC,WAAW,CAAC;IAE5F,YAAA,IAAI,WAAW,IAAI,WAAW,CAAC,WAAW,EAAE;oBAC1C,iBAAiB,CAAC,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,WAAW,CAAC;IAC/D,gBAAA,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC;;IAChD,iBAAA,IAAI,WAAW,IAAI,WAAW,CAAC,WAAW,EAAE;oBACjD,iBAAiB,CAAC,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,WAAW,CAAC;IAC/D,gBAAA,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC;;qBAChD;IACL,gBAAA,iBAAiB,CAAC,WAAW,CAAC,MAAM,CAAC;IACrC,gBAAA,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC;;;iBAEvD;IACL,YAAA,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC;gBAEvD,MAAM,cAAc,GAAG,iBAAiB,CAAC,aAAa,CAAC,sBAAsB,CAAC;gBAC9E,MAAM,aAAa,GAAG,iBAAiB,CAAC,aAAa,CAAC,kBAAkB,CAAC;gBACzE,MAAM,gBAAgB,GAAG,iBAAiB,CAAC,aAAa,CAAC,wBAAwB,CAAC;gBAElF,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,CAAC,CAAC,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC,gBAAgB,EAAE,WAAW,EAAE,CAAC,CAAC,cAAc,CAAC;gBAE3H,IAAI,aAAa,EAAE;IACjB,gBAAA,iBAAiB,CAAC,YAAY,CAAC,MAAM,EAAE,aAAa,CAAC;IACrD,gBAAA,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC;;qBACnD,IAAI,gBAAgB,EAAE;IAC3B,gBAAA,iBAAiB,CAAC,YAAY,CAAC,MAAM,EAAE,gBAAgB,CAAC;IACxD,gBAAA,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC;;qBACtD,IAAI,cAAc,EAAE;IACzB,gBAAA,iBAAiB,CAAC,YAAY,CAAC,MAAM,EAAE,cAAc,CAAC;IACtD,gBAAA,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC;;qBACpD;IAEL,gBAAA,IAAI,iBAAiB,CAAC,UAAU,EAAE;wBAChC,iBAAiB,CAAC,YAAY,CAAC,MAAM,EAAE,iBAAiB,CAAC,UAAU,CAAC;IACpE,oBAAA,OAAO,CAAC,GAAG,CAAC,oDAAoD,CAAC;;yBAC5D;IACL,oBAAA,iBAAiB,CAAC,WAAW,CAAC,MAAM,CAAC;IACrC,oBAAA,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC;;;;IAKjE,QAAA,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC;YACrD,QAAQ,GAAG,IAAI;IACf,QAAA,OAAO,IAAI;;IA3FG,IAAA,UAAA,CAAA,MAAM,SA4FrB;IAED,IAAA,SAAgB,KAAK,GAAA;YACnB,YAAY,CAAC,OAAO,EAAE;YACtB,QAAQ,GAAG,KAAK;;IAFF,IAAA,UAAA,CAAA,KAAK,QAGpB;IACH,CAAC,EArGS,UAAU,KAAV,UAAU,GAqGnB,EAAA,CAAA,CAAA;IAKD,IAAU,aAAa;IAAvB,CAAA,UAAU,aAAa,EAAA;QACrB,IAAI,QAAQ,GAA4B,IAAI;QAC5C,IAAI,gBAAgB,GAA4B,IAAI;QACpD,IAAI,WAAW,GAAW,EAAE;QAC5B,IAAI,UAAU,GAAW,EAAE;QAC3B,IAAI,aAAa,GAAkB,IAAI;IAEvC,IAAA,SAAS,yBAAyB,CAAC,QAAoB,EAAE,QAAgB,GAAG,EAAA;YAC1E,IAAI,aAAa,EAAE;gBACjB,YAAY,CAAC,aAAa,CAAC;;YAE7B,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC;;IAGpD,IAAA,SAAS,qBAAqB,GAAA;YAE5B,IAAI,gBAAgB,EAAE;gBACpB,gBAAgB,CAAC,UAAU,EAAE;;YAI/B,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC;IACtD,QAAA,IAAI,CAAC,MAAM;gBAAE;IAEb,QAAA,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,CAAC,SAAS,KAAI;gBAEpD,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC;IACzD,YAAA,IAAI,CAAC,cAAc,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;IAElE,gBAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,0CAA0C,CAAC;IACnE,oBAAA,QAAQ,CAAC,aAAa,CAAC,yCAAyC,CAAC;oBAEjF,IAAI,QAAQ,EAAE;wBACZ,yBAAyB,CAAC,MAAK;4BAC7B,UAAU,CAAC,KAAK,EAAE;4BAClB,UAAU,CAAC,MAAM,EAAE;yBACpB,EAAE,GAAG,CAAC;;;IAGb,SAAC,CAAC;IAEF,QAAA,gBAAgB,CAAC,OAAO,CAAC,MAAM,EAAE;IAC/B,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,OAAO,EAAE,IAAI;IACb,YAAA,UAAU,EAAE,IAAI;gBAChB,eAAe,EAAE,CAAC,OAAO;IAC1B,SAAA,CAAC;;IAGJ,IAAA,SAAgB,KAAK,GAAA;IACnB,QAAA,IAAI,QAAQ;gBAAE;IAGd,QAAA,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ;IACtC,QAAA,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI;IAEjC,QAAA,QAAQ,GAAG,IAAI,gBAAgB,CAAC,MAAK;IACnC,YAAA,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ;IACxC,YAAA,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI;gBAGnC,IAAI,OAAO,KAAK,WAAW,IAAI,MAAM,KAAK,UAAU,EAAE;oBACpD,WAAW,GAAG,OAAO;oBACrB,UAAU,GAAG,MAAM;IAEnB,gBAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;wBAE9B,yBAAyB,CAAC,MAAK;4BAC7B,UAAU,CAAC,KAAK,EAAE;IAClB,wBAAA,QAAQ,EAAE;4BAEV,UAAU,CAAC,MAAM,qBAAqB,EAAE,EAAE,GAAG,CAAC;yBAC/C,EAAE,GAAG,CAAC;;yBACF;IAEL,oBAAA,IAAI,YAAY,CAAC,QAAQ,EAAE,EAAE;4BAC3B,UAAU,CAAC,OAAO,EAAE;IACpB,wBAAA,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC;IAC5B,wBAAA,MAAM,MAAM,GAAG,YAAY,CAAC,SAAS,EAAE;4BACvC,IAAI,MAAM,EAAE;IACV,4BAAA,YAAY,CAAC,iBAAiB,CAAC,KAAK,CAAC;;;wBAGzC,UAAU,CAAC,KAAK,EAAE;wBAClB,IAAI,gBAAgB,EAAE;4BACpB,gBAAgB,CAAC,UAAU,EAAE;4BAC7B,gBAAgB,GAAG,IAAI;;;;IAGtB,iBAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBAErC,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC;oBACzD,IAAI,CAAC,cAAc,EAAE;wBACnB,yBAAyB,CAAC,MAAK;4BAC7B,UAAU,CAAC,KAAK,EAAE;IAClB,wBAAA,QAAQ,EAAE;yBACX,EAAE,GAAG,CAAC;;;IAGb,SAAC,CAAC;IAEF,QAAA,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE;IAC9B,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,OAAO,EAAE;IACV,SAAA,CAAC;IAGF,QAAA,IAAI,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBAClC,UAAU,CAAC,MAAM,qBAAqB,EAAE,EAAE,GAAG,CAAC;;;IA3DlC,IAAA,aAAA,CAAA,KAAK,QA6DpB;IAED,IAAA,SAAgB,IAAI,GAAA;YAClB,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,UAAU,EAAE;gBACrB,QAAQ,GAAG,IAAI;;YAEjB,IAAI,gBAAgB,EAAE;gBACpB,gBAAgB,CAAC,UAAU,EAAE;gBAC7B,gBAAgB,GAAG,IAAI;;;IAPX,IAAA,aAAA,CAAA,IAAI,OASnB;IACH,CAAC,EA1HS,aAAa,KAAb,aAAa,GA0HtB,EAAA,CAAA,CAAA;IAKD,IAAU,WAAW;IAArB,CAAA,UAAU,WAAW,EAAA;IACnB,IAAA,SAAS,YAAY,GAAA;IAEnB,QAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBAChD;;IAGF,QAAA,MAAM,MAAM,GAAG,YAAY,CAAC,SAAS,EAAE;YACvC,IAAI,MAAM,EAAE;gBACV,MAAM,CAAC,KAAK,EAAE;;iBACT;IAEL,YAAA,IAAI,UAAU,CAAC,MAAM,EAAE,EAAE;IACvB,gBAAA,MAAM,SAAS,GAAG,YAAY,CAAC,SAAS,EAAE;oBAC1C,IAAI,SAAS,EAAE;wBACb,SAAS,CAAC,KAAK,EAAE;;;;;IAMzB,IAAA,SAAgB,IAAI,GAAA;IAElB,QAAA,MAAM,UAAU,GAAG,CAAC,OAAO,OAAO,KAAK,WAAW,IAAI,OAAO,IAAI,OAAO,GAAG,MAAM;IAGjF,QAAA,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,OAAY,EAAE,MAAW,EAAE,YAAiB,KAAI;IACxF,YAAA,IAAI,OAAO,CAAC,MAAM,KAAK,cAAc,EAAE;IACrC,gBAAA,YAAY,EAAE;IACd,gBAAA,YAAY,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;;IAEjC,YAAA,OAAO,IAAI;IACb,SAAC,CAAC;YAGF,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,KAAoB,KAAI;IAE5D,YAAA,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,GAAG,EAAE;oBACnD,KAAK,CAAC,cAAc,EAAE;oBACtB,KAAK,CAAC,eAAe,EAAE;IACvB,gBAAA,YAAY,EAAE;;aAEjB,EAAE,IAAI,CAAC;;IArBM,IAAA,WAAA,CAAA,IAAI,OAsBnB;IACH,CAAC,EA5CS,WAAW,KAAX,WAAW,GA4CpB,EAAA,CAAA,CAAA;IAKD,IAAU,iBAAiB;IAA3B,CAAA,UAAU,iBAAiB,EAAA;IACzB,IAAA,SAAgB,aAAa,GAAA;IAC3B,QAAA,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,KAAI;gBAC7B,IAAI,QAAQ,GAAG,CAAC;gBAChB,MAAM,WAAW,GAAG,GAAG;gBACvB,MAAM,QAAQ,GAAG,GAAG;gBAEpB,MAAM,WAAW,GAAG,MAAK;IAEvB,gBAAA,MAAM,iBAAiB,GAAG,QAAQ,CAAC,aAAa,CAAC,0CAA0C,CAAC;IACnE,oBAAA,QAAQ,CAAC,aAAa,CAAC,yCAAyC,CAAC;oBAC1F,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC;IAEtD,gBAAA,IAAI,iBAAiB,IAAI,MAAM,EAAE;wBAC/B,OAAO,CAAC,IAAI,CAAC;wBACb;;IAGF,gBAAA,QAAQ,EAAE;IACV,gBAAA,IAAI,QAAQ,IAAI,WAAW,EAAE;wBAC3B,OAAO,CAAC,KAAK,CAAC;wBACd;;IAGF,gBAAA,UAAU,CAAC,WAAW,EAAE,QAAQ,CAAC;IACnC,aAAC;IAED,YAAA,WAAW,EAAE;IACf,SAAC,CAAC;;IA3BY,IAAA,iBAAA,CAAA,aAAa,gBA4B5B;IACH,CAAC,EA9BS,iBAAiB,KAAjB,iBAAiB,GA8B1B,EAAA,CAAA,CAAA;IAKD,eAAe,QAAQ,GAAA;IAErB,IAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAChD;;IAIF,IAAA,MAAM,WAAW,GAAG,MAAM,iBAAiB,CAAC,aAAa,EAAE;QAE3D,IAAI,CAAC,WAAW,EAAE;YAEhB,UAAU,CAAC,MAAM,QAAQ,EAAE,EAAE,IAAI,CAAC;YAClC;;IAGF,IAAA,IAAI,UAAU,CAAC,MAAM,EAAE,EAAE;IAEvB,QAAA,MAAM,UAAU,GAAG,YAAY,CAAC,QAAQ,EAAE;YAC1C,IAAI,UAAU,EAAE;gBACd,UAAU,CAAC,MAAM,EAAE;IACnB,YAAA,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC;;;IAG1C;IAKA,SAAS,gBAAgB,GAAA;IAEvB,IAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,UAAU,CAAC,SAAS,EAAE,EAAE;YAC1E,UAAU,CAAC,OAAO,EAAE;IACpB,QAAA,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC;;IAEhC;IAKA,IAAU,kBAAkB;IAA5B,CAAA,UAAU,kBAAkB,EAAA;QAC1B,IAAI,UAAU,GAAG,CAAC;QAClB,MAAM,UAAU,GAAG,EAAE;IAErB,IAAA,SAAgB,iBAAiB,GAAA;IAC/B,QAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBAChD;;IAGF,QAAA,QAAQ;iBACL,IAAI,CAAC,MAAK;gBACT,UAAU,GAAG,CAAC;IAChB,SAAC;IACA,aAAA,KAAK,CAAC,CAAC,GAAG,KAAI;IAEb,YAAA,IAAI,UAAU,GAAG,UAAU,EAAE;IAC3B,gBAAA,UAAU,EAAE;oBACZ,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;oBAChE,UAAU,CAAC,MAAM,iBAAiB,EAAE,EAAE,KAAK,CAAC;;IAEhD,SAAC,CAAC;;IAhBU,IAAA,kBAAA,CAAA,iBAAiB,oBAiBhC;IACH,CAAC,EAtBS,kBAAkB,KAAlB,kBAAkB,GAsB3B,EAAA,CAAA,CAAA;IAKD,SAAS,IAAI,GAAA;IAEX,IAAA,gBAAgB,EAAE;QAGlB,kBAAkB,CAAC,iBAAiB,EAAE;QAEtC,aAAa,CAAC,KAAK,EAAE;QACrB,WAAW,CAAC,IAAI,EAAE;IACpB;IAGA,IAAI,QAAQ,CAAC,UAAU,KAAK,SAAS,EAAE;IACrC,IAAA,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAAC;IACrD;SAAO;IACL,IAAA,IAAI,EAAE;IACR;;;;;;"}