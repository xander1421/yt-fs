{"version":3,"file":"content.js","sources":["../src/content.ts"],"sourcesContent":["/**\n * YouTube Tab-Fullscreen Extension - Content Script\n * Version 1.0.0 - Free Core\n */\n\n// Constants\nconst STORAGE_KEY = 'ytTabFS';\nconst CSS_CLASS = 'yt-tabfs-enabled';\nconst BUTTON_ID = 'yt-tabfs-button';\n\n/**\n * StateManager - Handles per-tab memory using sessionStorage\n */\nnamespace StateManager {\n  export function load(): boolean {\n    try {\n      return sessionStorage.getItem(STORAGE_KEY) === '1';\n    } catch {\n      return false;\n    }\n  }\n\n  export function save(isEnabled: boolean): void {\n    try {\n      if (isEnabled) {\n        sessionStorage.setItem(STORAGE_KEY, '1');\n      } else {\n        sessionStorage.removeItem(STORAGE_KEY);\n      }\n    } catch {\n      // Ignore storage errors\n    }\n  }\n\n  export function getState(): boolean {\n    return load();\n  }\n\n  export function setState(isEnabled: boolean): void {\n    save(isEnabled);\n  }\n}\n\n/**\n * DOMOverlay - Manages CSS class application and cleanup\n */\nnamespace DOMOverlay {\n  export function enable(): void {\n    console.log('[YT-TabFS] DOMOverlay.enable() called');\n    const htmlElement = document.documentElement;\n    if (!htmlElement.classList.contains(CSS_CLASS)) {\n      htmlElement.classList.add(CSS_CLASS);\n      console.log('[YT-TabFS] Added yt-tabfs-enabled class to html element');\n    } else {\n      console.log('[YT-TabFS] yt-tabfs-enabled class already present');\n    }\n  }\n\n  export function disable(): void {\n    console.log('[YT-TabFS] DOMOverlay.disable() called');\n    const htmlElement = document.documentElement;\n    if (htmlElement.classList.contains(CSS_CLASS)) {\n      htmlElement.classList.remove(CSS_CLASS);\n      console.log('[YT-TabFS] Removed yt-tabfs-enabled class from html element');\n    } else {\n      console.log('[YT-TabFS] yt-tabfs-enabled class not present');\n    }\n  }\n\n  export function isEnabled(): boolean {\n    return document.documentElement.classList.contains(CSS_CLASS);\n  }\n\n  export function toggle(): boolean {\n    const willBeEnabled = !isEnabled();\n    if (willBeEnabled) {\n      enable();\n    } else {\n      disable();\n    }\n    StateManager.setState(willBeEnabled);\n    return willBeEnabled;\n  }\n}\n\n/**\n * ToggleButton - Creates and manages the TF button\n */\nnamespace ToggleButton {\n  let buttonElement: HTMLElement | null = null;\n\n  export function create(): HTMLElement {\n    const button = document.createElement('button');\n    button.id = BUTTON_ID;\n    button.className = 'ytp-button yt-tabfs-button';\n    button.innerHTML = 'TF';\n    button.title = 'Toggle Tab-Fullscreen (Alt+T)';\n    button.setAttribute('aria-label', 'Toggle Tab-Fullscreen');\n    \n    button.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      console.log('[YT-TabFS] Button clicked');\n      \n      const currentState = StateManager.getState();\n      console.log('[YT-TabFS] Current state before toggle:', currentState);\n      \n      const newState = !currentState;\n      StateManager.setState(newState);\n      console.log('[YT-TabFS] New state after toggle:', newState);\n      \n      if (newState) {\n        console.log('[YT-TabFS] Enabling tab-fullscreen');\n        DOMOverlay.enable();\n      } else {\n        console.log('[YT-TabFS] Disabling tab-fullscreen');\n        DOMOverlay.disable();\n      }\n      \n      updateButtonState(button, newState);\n    });\n    \n    // Set initial button state\n    const initialState = StateManager.getState();\n    updateButtonState(button, initialState);\n    \n    buttonElement = button;\n    return button;\n  }\n\n  function updateButtonState(button: HTMLElement, isEnabled: boolean): void {\n    console.log('[YT-TabFS] Updating button state to:', isEnabled);\n    if (isEnabled) {\n      button.classList.add('yt-tabfs-active');\n    } else {\n      button.classList.remove('yt-tabfs-active');\n    }\n  }\n\n  export function setActive(isActive: boolean): void {\n    if (buttonElement) {\n      updateButtonState(buttonElement, isActive);\n    }\n  }\n\n  export function getElement(): HTMLElement | null {\n    return buttonElement;\n  }\n}\n\n/**\n * UIInjector - Handles button injection into YouTube player controls\n */\nnamespace UIInjector {\n  let injected = false;\n  let lastInjectionTime = 0;\n  const INJECTION_DEBOUNCE = 1000; // 1 second debounce\n\n  export function inject(): boolean {\n    const now = Date.now();\n    if (injected && (now - lastInjectionTime) < INJECTION_DEBOUNCE) {\n      return true; // Skip if recently injected\n    }\n\n    const controlsContainer = document.querySelector('.ytp-chrome-controls .ytp-left-controls');\n    if (!controlsContainer) {\n      console.log('[YT-TabFS] Looking for controls container: false');\n      return false;\n    }\n\n    console.log('[YT-TabFS] Looking for controls container: true');\n\n    // Check if button already exists\n    if (document.getElementById(BUTTON_ID)) {\n      injected = true;\n      lastInjectionTime = now;\n      return true;\n    }\n\n    const button = ToggleButton.create();\n    controlsContainer.appendChild(button);\n    console.log('[YT-TabFS] Button inserted into controls');\n\n    const initialState = StateManager.getState();\n    console.log('[YT-TabFS] Initial state from storage:', initialState);\n    \n    // Apply initial state\n    if (initialState) {\n      console.log('[YT-TabFS] Applying initial tab-fullscreen state');\n      DOMOverlay.enable();\n    }\n\n    injected = true;\n    lastInjectionTime = now;\n    return true;\n  }\n\n  export function initOnce(): void {\n    const pathname = window.location.pathname;\n    console.log('[YT-TabFS] initOnce called, pathname:', pathname);\n    \n    if (pathname !== '/watch') {\n      return;\n    }\n\n    const now = Date.now();\n    if (injected && (now - lastInjectionTime) < INJECTION_DEBOUNCE) {\n      console.log('[YT-TabFS] Already injected recently, skipping');\n      return;\n    }\n\n    if (inject()) {\n      console.log('[YT-TabFS] Successfully injected button');\n    } else {\n      console.log('[YT-TabFS] Failed to inject button');\n    }\n  }\n\n  export function reinjectIfMissing(): void {\n    if (!document.getElementById(BUTTON_ID)) {\n      injected = false;\n      inject();\n    }\n  }\n\n  export function isInjected(): boolean {\n    return injected;\n  }\n}\n\n/**\n * ObserverGuard - Manages MutationObserver lifecycle\n */\nnamespace ObserverGuard {\n  let observer: MutationObserver | null = null;\n\n  export function start(): void {\n    if (observer) return;\n\n    observer = new MutationObserver((mutations) => {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList') {\n          UIInjector.reinjectIfMissing();\n        }\n      }\n    });\n\n    const ytdApp = document.querySelector('ytd-app');\n    if (ytdApp) {\n      observer.observe(ytdApp, { childList: true, subtree: false });\n    }\n  }\n\n  export function stop(): void {\n    if (observer) {\n      observer.disconnect();\n      observer = null;\n    }\n  }\n}\n\n/**\n * EventBridge - Handles keyboard shortcuts and fullscreen events\n */\nnamespace EventBridge {\n  let nativeFullscreenWasActive = false;\n  let tabFsStateBeforeNative = false;\n\n  export function initShortcuts(): void {\n    // Listen for extension command\n    if (typeof chrome !== 'undefined' && chrome.commands) {\n      chrome.commands.onCommand.addListener((command) => {\n        if (command === 'toggle-tabfs') {\n          const isEnabled = DOMOverlay.toggle();\n          ToggleButton.setActive(isEnabled);\n        }\n      });\n    }\n\n    // Fallback keyboard listener\n    document.addEventListener('keydown', (e) => {\n      if (e.altKey && e.key === 't' && !e.ctrlKey && !e.shiftKey && !e.metaKey) {\n        // Only trigger if we're on a YouTube watch page and not in an input\n        if (location.pathname === '/watch' && \n            !(e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement)) {\n          e.preventDefault();\n          const isEnabled = DOMOverlay.toggle();\n          ToggleButton.setActive(isEnabled);\n        }\n      }\n    });\n  }\n\n  export function initFullscreenWatcher(): void {\n    // Watch for native fullscreen changes\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    \n    // Watch for YouTube's fullscreen class changes\n    const observer = new MutationObserver((mutations) => {\n      for (const mutation of mutations) {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'class') {\n          const target = mutation.target as HTMLElement;\n          if (target === document.documentElement) {\n            handleYouTubeFullscreen();\n          }\n        }\n      }\n    });\n\n    observer.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: ['class']\n    });\n  }\n\n  function handleFullscreenChange(): void {\n    const isNativeFullscreen = !!document.fullscreenElement;\n    \n    if (isNativeFullscreen && !nativeFullscreenWasActive) {\n      // Entering native fullscreen\n      nativeFullscreenWasActive = true;\n      tabFsStateBeforeNative = DOMOverlay.isEnabled();\n      \n      if (tabFsStateBeforeNative) {\n        DOMOverlay.disable();\n        ToggleButton.setActive(false);\n      }\n    } else if (!isNativeFullscreen && nativeFullscreenWasActive) {\n      // Exiting native fullscreen\n      nativeFullscreenWasActive = false;\n      \n      if (tabFsStateBeforeNative) {\n        DOMOverlay.enable();\n        ToggleButton.setActive(true);\n      }\n    }\n  }\n\n  function handleYouTubeFullscreen(): void {\n    const hasYtFullscreen = document.documentElement.classList.contains('ytp-fullscreen');\n    \n    if (hasYtFullscreen && !nativeFullscreenWasActive) {\n      // YouTube's fullscreen mode activated\n      nativeFullscreenWasActive = true;\n      tabFsStateBeforeNative = DOMOverlay.isEnabled();\n      \n      if (tabFsStateBeforeNative) {\n        DOMOverlay.disable();\n        ToggleButton.setActive(false);\n      }\n    } else if (!hasYtFullscreen && nativeFullscreenWasActive) {\n      // YouTube's fullscreen mode deactivated\n      nativeFullscreenWasActive = false;\n      \n      if (tabFsStateBeforeNative) {\n        DOMOverlay.enable();\n        ToggleButton.setActive(true);\n      }\n    }\n  }\n}\n\n// Main initialization\nfunction initOnce(): void {\n  const pathname = window.location.pathname;\n  console.log('[YT-TabFS] initOnce called, pathname:', pathname);\n  \n  if (pathname !== '/watch') {\n    return;\n  }\n\n  if (UIInjector.inject()) {\n    console.log('[YT-TabFS] Successfully injected button');\n  } else {\n    console.log('[YT-TabFS] Failed to inject button');\n  }\n}\n\nfunction init(): void {\n  // Initialize shortcuts and fullscreen watchers\n  EventBridge.initShortcuts();\n  EventBridge.initFullscreenWatcher();\n  \n  // Start observer for DOM changes\n  ObserverGuard.start();\n  \n  // Initial injection attempt\n  initOnce();\n  \n  // Watch for navigation changes (YouTube SPA)\n  let lastUrl = location.href;\n  new MutationObserver(() => {\n    const url = location.href;\n    if (url !== lastUrl) {\n      lastUrl = url;\n      setTimeout(initOnce, 100); // Small delay for DOM to settle\n    }\n  }).observe(document, { subtree: true, childList: true });\n}\n\n// Start when DOM is ready\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', init);\n} else {\n  init();\n} "],"names":[],"mappings":"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"}